name: Conda

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.10"]

    runs-on: ${{ matrix.os }}

    # The setup-miniconda action needs this to activate miniconda
    defaults:
      run:
        shell: "bash -l {0}"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: choco install wget 7zip cmake
        if: matrix.os == 'windows-latest'

      - name: Install deps
        run: brew install yasm nasm pkg-config 7zip wget
        if: matrix.os == 'macos-latest'

      # We also run out of space on ubuntu if we don't do an apt-get clean after installing
      - name: Update apt and install deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt-get install -y curl zip unzip tar yasm nasm gperf libgles2-mesa-dev libx11-dev libxft-dev libxext-dev libxrandr-dev libxi-dev libxcursor-dev libxdamage-dev libxinerama-dev libdbus-1-dev libxtst-dev build-essential g++ apt-transport-https ca-certificates gnupg software-properties-common wget zlib1g p7zip-full
          sudo apt-get clean
      - name: Get conda
        uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          python-version: ${{ matrix.python-version }}
          channels: conda-forge
          channel-priority: strict

      # Currently conda-build requires the dead package "toml" but doesn't declare it
      - name: Prepare
        run: conda install conda-build conda-verify pytest toml cmake

      - name: Build
        run: conda build conda.recipe

      - name: Install
        run: conda install -c ${CONDA_PREFIX}/conda-bld/ libdarknetpy

      - name: Test
        run: python -m pytest
